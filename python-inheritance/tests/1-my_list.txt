Test cases for MyList class
==========================

Import the class and create an instance:
    >>> MyList = __import__('1-my_list').MyList

Test with empty list:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Test with unsorted list:
    >>> my_list = MyList([4, 2, 1, 3])
    >>> my_list.print_sorted()
    [1, 2, 3, 4]
    >>> my_list  # Original list should remain unchanged
    [4, 2, 1, 3]

Test with already sorted list:
    >>> my_list = MyList([1, 2, 3, 4])
    >>> my_list.print_sorted()
    [1, 2, 3, 4]

Test with negative numbers:
    >>> my_list = MyList([-1, -3, -2, -4])
    >>> my_list.print_sorted()
    [-4, -3, -2, -1]

Test with single element:
    >>> my_list = MyList([1])
    >>> my_list.print_sorted()
    [1]

Test with duplicate elements:
    >>> my_list = MyList([5, 2, 1, 5, 2])
    >>> my_list.print_sorted()
    [1, 2, 2, 5, 5]
    >>> my_list  # Original list should remain unchanged
    [5, 2, 1, 5, 2]

Test with large list:
    >>> my_list = MyList(list(range(1000, 0, -1)))
    >>> sorted_list = my_list.print_sorted()
    >>> my_list[0] == 1000  # First element should still be 1000
    True
    >>> my_list[-1] == 1  # Last element should still be 1
    True
