The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

First import the function:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test basic matrix division:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test that original matrix is not modified:
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

Test division with float:
>>> matrix_divided(matrix, 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

Test matrix with float elements:
>>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
>>> matrix_divided(matrix, 2)
[[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

Test error when matrix is not a list of lists:
>>> matrix_divided("not a matrix", 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, "3"]], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test error when rows have different sizes:
>>> matrix_divided([[1, 2], [3, 4, 5]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

Test error when div is not a number:
>>> matrix_divided(matrix, "3")
Traceback (most recent call last):
    ...
TypeError: div must be a number

Test error when div is zero:
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
